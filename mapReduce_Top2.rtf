{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red0\green0\blue0;
\red252\green252\blue252;\red83\green83\blue83;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c99216\c99216\c99216;\cssrgb\c40000\c40000\c40000;}
\margl1440\margr1440\vieww33400\viewh18140\viewkind0
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\b\fs25\fsmilli12800 \cf2 \cb3 \expnd0\expndtw0\kerning0
Big Data Assignment-1: \
Nandini Rajeswaran - W1351723\
\
Input for mapper \
=========================
\b0 \
BK00,Intro to Programming,cs,programming\
BK01,Intro to Python,cs,algorithms\
BK02,Intro to Java,cs,algorithms\
BK03,Intro to Economics,business,algorithms\
BK04,Intro to Economics2,business,cs\
BK05,Advanced Java,cs,algorithms\
BK06,Advanced Java2,cs,algorithms\
BK07,Advanced Economics,cs,marketing\
BK08,Advanced Java3,cs,java\
BK09,Advanced Economics,sales,marketing\
BK10,Advanced Economics3,algorithms,cs\
BK11,Advanced Economics4,business,sales\
BK12,Advanced Programming,business,programming\

\b \
Map Function:\
=========================\

\b0 map(key, value)\{\
	//key : record number(1)\
	//value : Content of the record (\'93BK00,Intro to Programming,cs,programming\'94)\
\
	String[] tokens = value.split(\'93,\'94)\
	//token[0] = isbn\
	//token[1] = name\
	//token[2] = category1\
	//token[3] = category2\
\
	emit(\'93Books\'94 , 1)\
	emit(\'93category\'94 , token[2])  \
	emit(token[2] , 1)\
	emit(\'93category\'94 , token[3])  \
	emit(token[3] , 1)\
\}\
\

\b Mapper  Output\
=========================\
\

\b0 (\'93Books\'94,1)                               (\'93Books\'94,1)			 (\'93Books\'94,1)			   (\'93Books\'94,1)			(\'93Books\'94,1)			 (\'93Books\'94,1)			    \
(\'93category\'94,\'94cs\'94)                       (\'93category\'94,\'94cs\'94)		 (\'93category\'94,\'94cs\'94)		   (\'93category\'94,\'94business\'94)		(\'93category\'94,\'94business\'94)     (\'93category\'94,\'94cs\'94) 		    \
(\'93cs\'94,1)                                     (\'93cs\'94,1)				 (\'93cs\'94,1)			   (\'93business\'94,1)			(\'93business\'94,1)		 (\'93cs\'94,1)			    \
(\'93category\'94,\'94programming\'94)     (\'93category\'94,\'94algorithms\'94)     (\'93category\'94,\'94algorithms\'94)    (\'93category\'94,\'94algorithms\'94)         (\'93category\'94,\'94cs\'94)		 (\'93category\'94,\'94algorithms\'94)    \
(\'93programming\'94,1)                   (\'93algorithms\'94,1)		 (\'93algorithms\'94,1)		   (\'93algorithms\'94,1)			(\'93cs\'94,1)			 (\'93algorithms\'94,1)	    	    \
\
(\'93Books\'94,1)                               (\'93Books\'94,1) 			 (\'93Books\'94,1)			   (\'93Books\'94,1)			(\'93Books\'94,1)			  (\'93Books\'94,1)				(\'93Books\'94,1)\
(\'93category\'94,\'94cs\'94) 		        (\'93category\'94,\'94cs\'94)		 (\'93category\'94,\'94cs\'94)		   (\'93category\'94,\'94sales\'94)		(\'93category\'94,\'94algorithms\'94)    (\'93category\'94,\'94business\'94)		(\'93category\'94,\'94business\'94)\
(\'93cs\'94,1)			        (\'93cs\'94,1)			 	 (\'93cs\'94,1)			   (\'93sales\'94,1)				(\'93algorithms\'94,1)		  (\'93business\'94,1)			(\'93business\'94,1)\
(\'93category\'94,\'94algorithms\'94)          (\'93category\'94,\'94marketing\'94)	 (\'93category\'94,\'94java\'94)		   (\'93category\'94,\'94marketing\'94)	(\'93category\'94,\'94cs\'94)		  (\'93category\'94,\'94sales\'94)		(\'93category\'94,\'94programming\'94)\
(\'93algorithms\'94,1)		        (\'93marketing\'94,1)		 (\'93java\'94,1)			   (\'93marketing\'94,1)			(\'93cs\'94,1)			  (\'93sales\'94,1)				(\'93programming\'94,1)\
\
\

\b Sort & Shuffle Output (Reducer Input)\
===================================\
\

\b0 (\'93Books\'94,[1,1,1,1,1,1,1,1,1,1,1,1,1])\
(\'93cs\'94,[1,1,1,1,1,1,1,1,1])\
(\'94programming\'94,[1,1])\
(\'93algorithms\'94,[1,1,1,1,1,1])\
(\'93business\'94,[1,1,1,1])\
(\'93marketing\'94,[1,1])\
(\'93Java\'94,[1])\
(\'93sales\'94,[1,1])\
(\'93Category\'94,[\'93cs\'94,\'94programming\'94,\'94cs\'94,\'94algorithms\'94,\'94cs\'94,\'94algorithms\'94,\'94business\'94,\'94algorithms\'94,\'94business\'94,\'94cs\'94\'94,\
		\'94cs\'94,\'94algorithms\'94,\'94cs\'94,\'94algorithms\'94,\'94cs\'94,\'94marketing\'94,\'94cs\'94,\'94java\'94,\'94sales\'94,\'94marketing\'94,\'94algorithms\'94,\'94cs\'94,\'94business\'94,\'94sales\'94,\'94business\'94,\'94programming\'94)])\
\

\b Reduce Function:\
=========================\
\

\b0 reduce(key,values)\{\
	//key = String\
	//values = Iterable<Object> \
	\
	if(key == \'93category\'94)\{\
		values = ExcludeDuplicates(values);  \
		string category;\
		int count;\
		for(string list : values)\{\
			category = list\
			count++;\
		\} \
		emit(\'93Unique_Category\'94,category)\
		emit(\'93Unique_Category\'94,count)\
	else\{\
		int total =0;\
		for(integer i : values)\{\
		total = total + i;\
		\} emit(key, total);\
	\}\
		\cf4 \cb5 sort values\
		truncate values to top 3\
		for values in total\{\cf2 \cb3 \
			emit(key, total)\
		\}\
	\}\
\}\
	\

\b Reduce Output:\
=========================
\b0 	\
\
(\'93Unique_Category\'94,[\'93cs\'94,\'94programming\'94,\'94algorithms\'94,\'94business\'94,\'94marketing\'94,\'94java\'94,\'94sales\'94])\
(\'93Unique_Category\'94,7)\
\

\b Total number of books: 
\b0 \
(\'93Books\'94,13)\
(\'93cs\'94,9)\
(\'94programming\'94,2)\
(\'93algorithms\'94,6)\
(\'93business\'94,4)\
(\'93marketing\'94,2)\
(\'93Java\'94,1)\
(\'93Sales\'94,2)\
\

\b Top2 Categories:
\b0 \
(\'93Book\'94,13)\
(\'93cs\'94,9)\
(\'93algorithms\'94,6)\
\

\b Reference:\
=========================\

\b0 \
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf6 https://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/. (For duplicate removal)\
{\field{\*\fldinst{HYPERLINK "https://acadgild.com/blog/mapreduce-design-pattern-finding-top-k-records/"}}{\fldrslt https://acadgild.com/blog/mapreduce-design-pattern-finding-top-k-records/}} (For finding top2)
\f0\fs25\fsmilli12800 \cf2 \
\pard\pardeftab720\sl300\partightenfactor0
\cf2 \
}